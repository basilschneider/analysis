#!/usr/bin/env bash

# Wrapper script to create n-tuples from MiniAODs

set -e -o pipefail

dir=~/analysis/datasets/
out=output
nEvts=-1
nSplitEvts=50000
sample=TTJets_LO
condor=false
debug=false

usage(){
    echo "Usage: $0 [option]"
    echo "where [option] can be"
    echo "-h                 Show this help"
    echo "-o output          Set name of output directory (default: $out)"
    echo "-d dir             Path to output directory (default: $dir)"
    echo "-n N               Process N events (default: $nEvts)"
    echo "-s sample          Run over sample (default: $sample)"
    echo "                   See samples for a list of samples"
    echo "                   Use \"all\" to run over all samples"
    echo "-c                 Run on condor (default: $condor)"
    echo "--debug            Debug messages (default: $debug)"
}


parseOptions(){

    # Check for flags
    OPT=$(getopt \
        --options ho:d:n:s:c \
        --long debug \
        --name "$0" \
        -- "$@"
    )

    eval set -- "${OPT}"

    while true; do
        case "${1}" in
            -h) usage
                exit 0;;
            -o) out="${2}"
                shift 2;;
            -d) dir="${2}"
                shift 2;;
            -n) nEvts="${2}"
                shift 2;;
            -s) sample="${2}"
                shift 2;;
            -c) condor=true
                shift 1;;
            --debug) debug=true
                shift 1;;
            --) shift
                break;;
        esac
    done

    # Check for positional arguments
    if [ $# -ne 0 ]; then
        usage
        exit 1
    fi
}

produceTrees(){
    # Commands to be executed later
    cmd=()

    if [ "${condor}" == true ]; then
        cmdCondor
    else
        cmdLocal
    fi
}

cmdLocal(){
    # Report what you are doing
    cmd+=('echo Run locally, only over first file in sample.')
    cmd+=('echo This is used for testing and debugging.')

    # Define path to configfile
    cmd+=('cfgfile=${CMSSW_BASE}/src/CMGTools/SUSYAnalysis/cfg/')
    cmd+=('cfgfile+=run_susySingleLepton_v2_cfg.py')

    # Modify config file
    cmd+=('sed -i "/sedAnchor03/s/comp = [^ ]*/comp = ${sample}/" ${cfgfile}')
    cmd+=('cd ${CMSSW_BASE}/src/CMGTools/SUSYAnalysis/cfg/')

    # Run
    cmd+=('heppy ${dir}/${out} run_susySingleLepton_v2_cfg.py -p 0 -f')
    # If the variable is set, run only over ${nEvts} events
    if [ ${nEvts} -ge 0 ]; then
        cmdadd '-N ${nEvts}'
    fi
}

cmdCondor(){
    # Get info about sample(s)
    echo "Not yet implemented"
}

# Append to last cmd entry
cmdadd(){
    cmd[${#cmd[@]}-1]+=" $1"
}

# Invoke cmd command
invokeCmd(){
    # Invoke command(s) in subshell
    (
        for c in "${cmd[@]}"; do
            if [ "$debug" == true ]; then
                echo "$c"
            fi
            eval "$c"
        done
    )
}

main(){
    parseOptions "$@"
    produceTrees
    invokeCmd
}

main "$@"
